openapi: 3.0.0
x-stoplight:
  id: w9c5iq3rh9v42
info:
  title: Agent 节点开放的接口
  version: '1.0'
  description: Agent 节点开放的接口
  license:
    name: NONE
    url: NONE
  termsOfService: 'https://github.com/vela-ssoc'
  contact:
    name: ssoc team
    url: 'https://github.com/vela-ssoc'
    email: hnwzy@live.com
  x-logo:
    url: logo.ico
servers:
  - url: 'http://spdy-tunnel/api/v1'
    description: /api/v1
tags:
  - name: 配置脚本
    description: 中心端配置脚本增/删/改时回调通知接口
  - name: 三方文件
    description: 中心端三方文件修改删除时回调通知接口
  - name: 程序事件
    description: agent 程序事件通知接口
  - name: 请求响应（RR）
    description: 通用请求响应类型的接口
  - name: websocket 接口（WS）
    description: 通用 websocket 接口
paths:
  '/arr/{path}':
    parameters:
      - schema:
          type: string
        name: path
        in: path
        required: true
        description: 路径
    get:
      summary: 通用请求响应类接口
      operationId: get-arr-path
      responses:
        '200':
          description: OK
      description: |-
        安全平台的操作数据流转如下：

        `browser` -> `manager` -> `broker` -> `minion(agent)`

        管理员通过浏览器（即：`browser`）界面对 Agent 进行操作管控，浏览器收到点击操作会请求 `manager`，`manager` 会进行鉴权、业务处理后将 `信息事件` 发给对应的代理节点（即：`broker`），`broker` 收到后也会做业务处理将 `信息事件` 通知给对应的 Agent（即：`minion` 或叫 `agent`）。

        而 `/api/v1/arr/` 开头的 URL 会虽然经过层层代理将数据原样发送至对应的 Agent 节点，但是经过 `manager` 和 `broker` 均不会对报文做任何业务处理。

        URL 可以有多层，也可以带查询参数，如下均可以使用：

        - /api/v1/arr/path
        - /api/v1/arr/path1/path2
        - /api/v1/arr/path1/path2/path3
        - /api/v1/arr/path?name=kun&age=12&hobby=basketball
        - /api/v1/arr/path1/path2?name=kun&hobbies=sing&hobbies=dance&hobbies=rap&hobbies=basketball

        > - 严禁该接口用于控制业务逻辑，这样会绕过 `manager` 和 `broker` 的业务处理，可能会导致数据错乱。
        > - 该接口属于扩展接口，用于管理员直接请求 Agent 节点。
        > - 具体的请求报文与响应报文根据实际业务而定。
      tags:
        - 请求响应（RR）
    post:
      summary: 通用请求响应类接口
      operationId: post-arr-path
      responses:
        '200':
          description: OK
      description: |-
        安全平台的操作数据流转如下：

        `browser` -> `manager` -> `broker` -> `minion(agent)`

        管理员通过浏览器（即：`browser`）界面对 Agent 进行操作管控，浏览器收到点击操作会请求 `manager`，`manager` 会进行鉴权、业务处理后将 `信息事件` 发给对应的代理节点（即：`broker`），`broker` 收到后也会做业务处理将 `信息事件` 通知给对应的 Agent（即：`minion` 或叫 `agent`）。

        而 `/api/v1/arr/` 开头的 URL 会虽然经过层层代理将数据原样发送至对应的 Agent 节点，但是经过 `manager` 和 `broker` 均不会对报文做任何业务处理。

        URL 可以有多层，也可以带查询参数，如下均可以使用：

        - /api/v1/arr/path
        - /api/v1/arr/path1/path2
        - /api/v1/arr/path1/path2/path3
        - /api/v1/arr/path?name=kun&age=12&hobby=basketball
        - /api/v1/arr/path1/path2?name=kun&hobbies=sing&hobbies=dance&hobbies=rap&hobbies=basketball

        > - 严禁该接口用于控制业务逻辑，这样会绕过 `manager` 和 `broker` 的业务处理，可能会导致数据错乱。
        > - 该接口属于扩展接口，用于管理员直接请求 Agent 节点。
        > - 具体的请求报文与响应报文根据实际业务而定。
      tags:
        - 请求响应（RR）
    put:
      summary: 通用请求响应类接口
      operationId: put-arr-path
      responses:
        '200':
          description: OK
      description: |-
        安全平台的操作数据流转如下：

        `browser` -> `manager` -> `broker` -> `minion(agent)`

        管理员通过浏览器（即：`browser`）界面对 Agent 进行操作管控，浏览器收到点击操作会请求 `manager`，`manager` 会进行鉴权、业务处理后将 `信息事件` 发给对应的代理节点（即：`broker`），`broker` 收到后也会做业务处理将 `信息事件` 通知给对应的 Agent（即：`minion` 或叫 `agent`）。

        而 `/api/v1/arr/` 开头的 URL 会虽然经过层层代理将数据原样发送至对应的 Agent 节点，但是经过 `manager` 和 `broker` 均不会对报文做任何业务处理。

        URL 可以有多层，也可以带查询参数，如下均可以使用：

        - /api/v1/arr/path
        - /api/v1/arr/path1/path2
        - /api/v1/arr/path1/path2/path3
        - /api/v1/arr/path?name=kun&age=12&hobby=basketball
        - /api/v1/arr/path1/path2?name=kun&hobbies=sing&hobbies=dance&hobbies=rap&hobbies=basketball

        > - 严禁该接口用于控制业务逻辑，这样会绕过 `manager` 和 `broker` 的业务处理，可能会导致数据错乱。
        > - 该接口属于扩展接口，用于管理员直接请求 Agent 节点。
        > - 具体的请求报文与响应报文根据实际业务而定。
      tags:
        - 请求响应（RR）
    patch:
      summary: 通用请求响应类接口
      operationId: patch-arr-path
      responses:
        '200':
          description: OK
      description: |-
        安全平台的操作数据流转如下：

        `browser` -> `manager` -> `broker` -> `minion(agent)`

        管理员通过浏览器（即：`browser`）界面对 Agent 进行操作管控，浏览器收到点击操作会请求 `manager`，`manager` 会进行鉴权、业务处理后将 `信息事件` 发给对应的代理节点（即：`broker`），`broker` 收到后也会做业务处理将 `信息事件` 通知给对应的 Agent（即：`minion` 或叫 `agent`）。

        而 `/api/v1/arr/` 开头的 URL 会虽然经过层层代理将数据原样发送至对应的 Agent 节点，但是经过 `manager` 和 `broker` 均不会对报文做任何业务处理。

        URL 可以有多层，也可以带查询参数，如下均可以使用：

        - /api/v1/arr/path
        - /api/v1/arr/path1/path2
        - /api/v1/arr/path1/path2/path3
        - /api/v1/arr/path?name=kun&age=12&hobby=basketball
        - /api/v1/arr/path1/path2?name=kun&hobbies=sing&hobbies=dance&hobbies=rap&hobbies=basketball

        > - 严禁该接口用于控制业务逻辑，这样会绕过 `manager` 和 `broker` 的业务处理，可能会导致数据错乱。
        > - 该接口属于扩展接口，用于管理员直接请求 Agent 节点。
        > - 具体的请求报文与响应报文根据实际业务而定。
      tags:
        - 请求响应（RR）
    delete:
      summary: 通用请求响应类接口
      operationId: delete-arr-path
      responses:
        '200':
          description: OK
      description: |-
        安全平台的操作数据流转如下：

        `browser` -> `manager` -> `broker` -> `minion(agent)`

        管理员通过浏览器（即：`browser`）界面对 Agent 进行操作管控，浏览器收到点击操作会请求 `manager`，`manager` 会进行鉴权、业务处理后将 `信息事件` 发给对应的代理节点（即：`broker`），`broker` 收到后也会做业务处理将 `信息事件` 通知给对应的 Agent（即：`minion` 或叫 `agent`）。

        而 `/api/v1/arr/` 开头的 URL 会虽然经过层层代理将数据原样发送至对应的 Agent 节点，但是经过 `manager` 和 `broker` 均不会对报文做任何业务处理。

        URL 可以有多层，也可以带查询参数，如下均可以使用：

        - /api/v1/arr/path
        - /api/v1/arr/path1/path2
        - /api/v1/arr/path1/path2/path3
        - /api/v1/arr/path?name=kun&age=12&hobby=basketball
        - /api/v1/arr/path1/path2?name=kun&hobbies=sing&hobbies=dance&hobbies=rap&hobbies=basketball

        > - 严禁该接口用于控制业务逻辑，这样会绕过 `manager` 和 `broker` 的业务处理，可能会导致数据错乱。
        > - 该接口属于扩展接口，用于管理员直接请求 Agent 节点。
        > - 具体的请求报文与响应报文根据实际业务而定。
      tags:
        - 请求响应（RR）
    head:
      summary: 通用请求响应类接口
      operationId: head-arr-path
      responses:
        '200':
          description: OK
      description: |-
        安全平台的操作数据流转如下：

        `browser` -> `manager` -> `broker` -> `minion(agent)`

        管理员通过浏览器（即：`browser`）界面对 Agent 进行操作管控，浏览器收到点击操作会请求 `manager`，`manager` 会进行鉴权、业务处理后将 `信息事件` 发给对应的代理节点（即：`broker`），`broker` 收到后也会做业务处理将 `信息事件` 通知给对应的 Agent（即：`minion` 或叫 `agent`）。

        而 `/api/v1/arr/` 开头的 URL 会虽然经过层层代理将数据原样发送至对应的 Agent 节点，但是经过 `manager` 和 `broker` 均不会对报文做任何业务处理。

        URL 可以有多层，也可以带查询参数，如下均可以使用：

        - /api/v1/arr/path
        - /api/v1/arr/path1/path2
        - /api/v1/arr/path1/path2/path3
        - /api/v1/arr/path?name=kun&age=12&hobby=basketball
        - /api/v1/arr/path1/path2?name=kun&hobbies=sing&hobbies=dance&hobbies=rap&hobbies=basketball

        > - 严禁该接口用于控制业务逻辑，这样会绕过 `manager` 和 `broker` 的业务处理，可能会导致数据错乱。
        > - 该接口属于扩展接口，用于管理员直接请求 Agent 节点。
        > - 具体的请求报文与响应报文根据实际业务而定。
      tags:
        - 请求响应（RR）
    options:
      summary: 通用请求响应类接口
      operationId: options-arr-path
      responses:
        '200':
          description: OK
      description: |-
        安全平台的操作数据流转如下：

        `browser` -> `manager` -> `broker` -> `minion(agent)`

        管理员通过浏览器（即：`browser`）界面对 Agent 进行操作管控，浏览器收到点击操作会请求 `manager`，`manager` 会进行鉴权、业务处理后将 `信息事件` 发给对应的代理节点（即：`broker`），`broker` 收到后也会做业务处理将 `信息事件` 通知给对应的 Agent（即：`minion` 或叫 `agent`）。

        而 `/api/v1/arr/` 开头的 URL 会虽然经过层层代理将数据原样发送至对应的 Agent 节点，但是经过 `manager` 和 `broker` 均不会对报文做任何业务处理。

        URL 可以有多层，也可以带查询参数，如下均可以使用：

        - /api/v1/arr/path
        - /api/v1/arr/path1/path2
        - /api/v1/arr/path1/path2/path3
        - /api/v1/arr/path?name=kun&age=12&hobby=basketball
        - /api/v1/arr/path1/path2?name=kun&hobbies=sing&hobbies=dance&hobbies=rap&hobbies=basketball

        > - 严禁该接口用于控制业务逻辑，这样会绕过 `manager` 和 `broker` 的业务处理，可能会导致数据错乱。
        > - 该接口属于扩展接口，用于管理员直接请求 Agent 节点。
        > - 具体的请求报文与响应报文根据实际业务而定。
      tags:
        - 请求响应（RR）
    trace:
      summary: 通用请求响应类接口
      operationId: trace-arr-path
      responses:
        '200':
          description: OK
      description: |-
        安全平台的操作数据流转如下：

        `browser` -> `manager` -> `broker` -> `minion(agent)`

        管理员通过浏览器（即：`browser`）界面对 Agent 进行操作管控，浏览器收到点击操作会请求 `manager`，`manager` 会进行鉴权、业务处理后将 `信息事件` 发给对应的代理节点（即：`broker`），`broker` 收到后也会做业务处理将 `信息事件` 通知给对应的 Agent（即：`minion` 或叫 `agent`）。

        而 `/api/v1/arr/` 开头的 URL 会虽然经过层层代理将数据原样发送至对应的 Agent 节点，但是经过 `manager` 和 `broker` 均不会对报文做任何业务处理。

        URL 可以有多层，也可以带查询参数，如下均可以使用：

        - /api/v1/arr/path
        - /api/v1/arr/path1/path2
        - /api/v1/arr/path1/path2/path3
        - /api/v1/arr/path?name=kun&age=12&hobby=basketball
        - /api/v1/arr/path1/path2?name=kun&hobbies=sing&hobbies=dance&hobbies=rap&hobbies=basketball

        > - 严禁该接口用于控制业务逻辑，这样会绕过 `manager` 和 `broker` 的业务处理，可能会导致数据错乱。
        > - 该接口属于扩展接口，用于管理员直接请求 Agent 节点。
        > - 具体的请求报文与响应报文根据实际业务而定。
      tags:
        - 请求响应（RR）
  '/aws/{path}':
    parameters:
      - schema:
          type: string
        name: path
        in: path
        required: true
        description: 自定义路径
    get:
      summary: websocket 接口
      responses:
        '100':
          description: websocket 建立成功
        '200':
          description: 不允许返回 `2xx` 级错误
        '400':
          description: 返回具体的错误信息
      operationId: get-aws-path
      description: |-
        `/api/v1/aws/` 是 websocket 透传至 Agent 节点，功能类似于 `/api/v1/arr/` 接口，属于开放预留端口。 

        URL 可以有多层，也可以带查询参数，如下均可以使用：

        - /api/v1/arr/path
        - /api/v1/arr/path1/path2
        - /api/v1/arr/path1/path2/path3
        - /api/v1/arr/path?name=kun&age=12&hobby=basketball
        - /api/v1/arr/path1/path2?name=kun&hobbies=sing&hobbies=dance&hobbies=rap&hobbies=basketball

        > - 严禁该接口用于控制业务逻辑，这样会绕过 `manager` 和 `broker` 的业务处理，可能会导致数据错乱。
        > - 该接口属于扩展接口，用于管理员直接请求 Agent 节点。
        > - 具体的请求报文根据实际业务而定。
      tags:
        - websocket 接口（WS）
  /substance/change:
    post:
      summary: 配置脚本变更通知
      operationId: post-substance-change
      responses:
        '200':
          description: OK
      description: 中心端对配置脚本作出修改会触发该接口
      tags:
        - 配置脚本
    parameters: []
  /third/change:
    post:
      summary: 三方文件变更
      operationId: post-third-change
      responses:
        '200':
          description: OK
      tags:
        - 三方文件
      description: 三方文件变更
  /app/update:
    post:
      summary: 程序更新通知
      operationId: post-app-update
      responses:
        '200':
          description: OK
      description: 告知 `Agent` 进程需要检查更新
      tags:
        - 程序事件
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                semver:
                  type: string
                  description: 版本号
            examples:
              更新到指定版本:
                value:
                  semver: 1.2.3
              更新至最新版本:
                value: {}
        description: ''
components:
  schemas: {}
