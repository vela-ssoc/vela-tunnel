openapi: 3.1.0
x-stoplight:
  id: c9vjkvk4f45fu
info:
  title: Agent 与 Broker 节点对接文档
  version: '1.0'
  description: Agent 与 Broker 节点对接文档
  contact:
    name: ssoc
    url: 'https://github.com/vela-ssoc'
  termsOfService: 'https://github.com/vela-ssoc'
  summary: Agent 与 Broker 节点对接文档
  x-logo:
    url: logo.ico
tags:
  - name: Agent
    description: Agent 需要提供的接口
  - name: Broker
    description: Broker 需要提供的接口
servers:
  - url: /api/v1
    description: 基础路径
paths:
  /agent/task/diff:
    post:
      summary: 配置变更回调
      operationId: post-agent-task-diff
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskReport'
              examples:
                示例:
                  value:
                    tasks:
                      - id: 1133847578322
                        name: kafka
                        dialect: true
                        hash: 28f35476af08ba7d170529ec46484b98
                        uptime: '2023-05-23T02:42:26.968Z'
                        from: tunnel
                        runners:
                          - name: kafka.sub
                            type: kafka
                            status: running
      tags:
        - Agent
      description: 当中心端配置变更时，会调用 agent 的该接口
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskDiff'
            examples:
              示例:
                value:
                  removes:
                    - 3415465343438593
                  updates:
                    - id: 45863228455684120
                      name: kafka
                      dialect: true
                      hash: 28f35476af08ba7d170529ec46484b98
                      chunk: cHJpbnQoIkhlbGxvIik=
  /agent/task/status:
    post:
      summary: 抓取 agent 上配置运行状态
      operationId: post-agent-task-status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskReport'
              examples:
                示例:
                  value:
                    tasks:
                      - id: 1133847578322
                        name: kafka
                        dialect: true
                        hash: 28f35476af08ba7d170529ec46484b98
                        uptime: '2023-05-23T02:42:26.968Z'
                        from: tunnel
                        runners:
                          - name: kafka.sub
                            type: kafka
                            status: running
      tags:
        - Agent
      description: 抓取 agent 上配置运行状态
  /agent/third/diff:
    post:
      summary: 三方文件变更回调
      operationId: post-agent-third-diff
      responses:
        '200':
          description: OK
      tags:
        - Agent
      description: '当文件发生修改时，中心端会通知 agent 哪个文件发生了修改。agent 收到通知时要先自行判断是否用到了该文件。如果没有用到可忽略该通知。如果用到了该文件，请中心端自行 [获取最新的三方文件](/operations/get-broker-third) 。'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 发生变更的文件名
              required:
                - name
            examples:
              示例:
                value:
                  name: ip2region.db
  /broker/third:
    get:
      summary: 下载三方文件
      tags:
        - Broker
      responses:
        '200':
          description: 文件下载
          content:
            application/octet-stream:
              schema:
                type: object
                properties: {}
        '304':
          description: 文件未发生变化
        '404':
          description: 文件不存在
      operationId: get-broker-third
      description: |
        `name`：文件名必填

        `hash`：agent 节点计算的 md5 可选

        文件下载逻辑：

        agent 向中心端请求下载三方文件，`name` 为必填项， 中心端根据文件名查找文件。

        - 当文件未找到时 HTTP 状态码返回 `404`，即 agent 调用 `tunnel.Attchment()` 会返回 `err`。

        - 当找到文件时，中心端会匹配 `hash`，请求的 `hash` 与中心端 `hash` 一致时，HTTP 状态码返回 `304`。当 `hash` 不一致时才会返回文件下载流及文件基本信息。
components:
  schemas:
    TaskDiff:
      title: TaskDiff
      x-stoplight:
        id: ztigrtssizk6y
      type: object
      description: '中心端比对后返回的差异信息，请c[Go struct 定义]'
      properties:
        removes:
          type: array
          items:
            type: integer
        updates:
          type: array
          items:
            $ref: '#/components/schemas/TaskChunk'
      examples:
        - removes:
            - 89655745887242450000
          updates:
            - id: 789665585552788
              name: kafka
              dialect: true
              hash: 28f35476af08ba7d170529ec46484b98
              chunk: cHJpbnQoIkhlbGxvIik=
    TaskChunk:
      title: TaskChunk
      x-stoplight:
        id: ma43hfagscnvy
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        dialect:
          type: boolean
        hash:
          type: string
        chunk:
          type: string
      examples:
        - id: 7895536473673485
          name: kafka
          dialect: true
          hash: 28f35476af08ba7d170529ec46484b98
          chunk: cHJpbnQoIkhlbGxvIik=
    TaskRunner:
      title: TaskRunner
      x-stoplight:
        id: w11u8tn7n60xh
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        status:
          type: string
      examples:
        - name: kafka.sub
          type: kafka
          status: running
    TaskStatus:
      title: TaskStatus
      x-stoplight:
        id: mv0o6vtb7qsqy
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        dialect:
          type: boolean
        hash:
          type: string
        uptime:
          type: string
        from:
          type: string
        runners:
          type: array
          items:
            $ref: '#/components/schemas/TaskRunner'
      examples:
        - id: 1133847578322
          name: kafka
          dialect: true
          hash: 28f35476af08ba7d170529ec46484b98
          uptime: '2023-05-23T02:42:26.968Z'
          from: tunnel
          runners:
            - name: kafka.sub
              type: kafka
              status: running
    TaskReport:
      title: TaskReport
      x-stoplight:
        id: dvqomtdddc6j7
      type: object
      properties:
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/TaskStatus'
      examples:
        - tasks:
            - id: 1133847578322
              name: kafka
              dialect: true
              hash: 28f35476af08ba7d170529ec46484b98
              uptime: '2023-05-23T02:42:26.968Z'
              from: tunnel
              runners:
                - name: kafka.sub
                  type: kafka
                  status: running
